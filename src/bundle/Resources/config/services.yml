imports:
    - { resource: services/service_aliases.yml }
    - { resource: services/controllers.yml }
    - { resource: services/tabs.yml }
    - { resource: services/menu.yml }
    - { resource: services/application_config.yml }

parameters:

services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: false

    EzPlatformAdminUi\Service\TrashService\TrashService: '@EzPlatformAdminUi\Service\TrashService'

    EzPlatformAdminUi\Service\Role\RoleServiceInterface: '@EzPlatformAdminUi\Service\Role\RoleService'

    EzPlatformAdminUiBundle\ParamConverter\:
        resource: "../../ParamConverter/*"
        public: true
        tags:
            - { name: 'request.param_converter' }

    EzPlatformAdminUi\EventListener\RequestListener:
        calls:
            - [setContainer, ["@service_container"]]
        tags:
            - { name: kernel.event_subscriber }

    EzPlatformAdminUi\Service\:
        resource: '../../../lib/Service/*'
        public: true

    EzPlatformAdminUi\Service\CacheService:
        class: EzPlatformAdminUi\Service\CacheService
        arguments:
            - '@ezpublish.spi.persistence.legacy'
            - '@ezpublish.cache_pool'

    EzPlatformAdminUi\Service\ContentTypeService:
        arguments:
            $prioritizedLanguages: '$languages$'

    EzPlatformAdminUi\Form\Type\:
        resource: '../../../lib/Form/Type'

    EzPlatformAdminUi\Form\DataMapper\:
        resource: '../../../lib/Form/DataMapper'

    EzPlatformAdminUi\Form\Type\Policy\PolicyChoiceType:
        arguments:
            $policyMap: "%ezpublish.api.role.policy_map%"

    EzPlatformAdminUi\UI\Dataset\Factory: ~
    EzPlatformAdminUi\UI\Value\ValueFactory:
        lazy: true
        tags:
            - { name: form.type }

    EzPlatformAdminUi\Form\Factory\FormFactory: ~
